import { HttpHeaders } from '@angular/common/http';
import { Component, Input, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { ContactField } from 'src/app/core/services/model.service';
import { environment } from 'src/environments/environment';
import { v4 as uuid } from 'uuid';
import { ApiCallService } from 'src/app/core/services/api-call.service';
import { ContactService } from '../../../contact.service';

@Component({
  selector: 'pulse-info-form',
  templateUrl: './info-form.component.html',
  styleUrls: ['./info-form.component.css']
})
export class InfoFormComponent implements OnInit {

  @Input() editForm: FormGroup;
  @Input() contactFieldList: ContactField[] = [];

  infoForm: FormGroup;
  showErrorMsg = false;
  showGroupNameField = false;
  showContactField = false;

  constructor(private readonly apiCallService:ApiCallService) { }

  ngOnInit(): void {
      this.infoForm = this.editForm;
  }

  onSelectCategory(event: any) {
    if (event.value.fieldType === "RG") {
      this.showGroupNameField = true;
      this.showContactField = false;
    }
    else {
      this.showGroupNameField = false;
      this.showContactField = true;
    }
  }

  _employeeTimeout: any = null;
  fetchEmployeeDetails(employeeId: string) {
    if (this._employeeTimeout) {
      window.clearTimeout(this._employeeTimeout);
    }
    this._employeeTimeout = window.setTimeout(() => {
      this._employeeTimeout = null;
      if (employeeId.includes("@mastercard.com")) {
        const correlationID = uuid.v4();

        const httpOptions = {
          headers: new HttpHeaders({
            'X-MC-Correlation-ID': correlationID,
            'x-email-id': employeeId
          }),
        };
        this.apiCallService.getData(environment.outboundUrl + environment.employeeUrl, httpOptions).subscribe(
          (data: any) => {
            if (data === null) {
              this.showErrorMsg = true;
              this.infoForm.patchValue({
                employeeName: '',
                empPhone: '',
                empRole: '',
                empWork: '',
                empHome: '',
                employeeId: '',
                errorCount: 1,
              });
              this.infoForm.controls.empWork.disable();
              this.infoForm.controls.employeeName.disable();
              this.infoForm.controls.empHome.disable();
              this.infoForm.controls.empRole.disable();
            }
            else {
              this.showErrorMsg = false;
              this.infoForm.patchValue({
                employeeName: data.empName,
                empPhone: `${data.businessNum};${data.phoneNum}`,
                empWork: data.businessNum,
                empHome: data.phoneNum,
                empRole: data.jobTitle,
                employeeId: data.empId,
                errorCount: 0,
              });
              this.infoForm.controls.empWork.enable();
              this.infoForm.controls.empHome.enable();
              this.infoForm.controls.empRole.enable();
              this.infoForm.controls.employeeName.enable();
            }
          },
          (error) => {
            console.log("failed");
          });
      }
      else {
        this.showErrorMsg = false;
        this.infoForm.patchValue({
          employeeName: '',
          empPhone: '',
          empRole: '',
          empWork: '',
          empHome: '',
          employeeId: '',
          errorCount: 0,
        });
        this.infoForm.controls.empWork.disable();
        this.infoForm.controls.empHome.disable();
        this.infoForm.controls.empRole.disable();
        this.infoForm.controls.employeeName.disable();
      }
    }, 1000);
  }

  _timeout: any = null;
  validateGroupName(groupName: string) {
    if (this.infoForm.value.categories.fieldName !== "Remedy PRT Support Group" && this.infoForm.value.categories.fieldName !== "Remedy TRT support group") {
      if (this._timeout) {
        window.clearTimeout(this._timeout);
      }
      this._timeout = window.setTimeout(() => {
        this._timeout = null;
        ContactService.validateRemedyGroup(groupName).then((value: boolean) => {
          this.showErrorMsg = value;
          if (value) {
            this.infoForm.value.errorCount = 1;
          }
          else {
            this.infoForm.value.errorCount = 0;
          }
        });
      }, 1000);
    }
  }
}
